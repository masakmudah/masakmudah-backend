generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  fullname  String?
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password     Password[]
  savedRecipes SavedRecipe[]
  recipes      Recipe[]
}

model Password {
  id   String @id @default(cuid())
  hash String

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Ingredient {
  id String @id @default(cuid())

  name String
  slug String @unique

  ingredientItems IngredientItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model IngredientItem {
  id String @id @default(cuid())

  ingredientId String
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id], onDelete: Cascade)

  recipeId String
  recipe   Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)

  quantity    Int
  measurement String
  sequence    Int    @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Recipe {
  id String @id @default(cuid())

  name        String
  description String
  cookingTime String?
  imageURL    String
  slug        String  @unique @db.VarChar(255)

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  categories      Category[]
  ingredientItems IngredientItem[]
  instructions    Json? // Array of Objects
  savedRecipes    SavedRecipe[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id String @id @default(cuid())

  name String
  slug String @unique

  recipes Recipe[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SavedRecipe {
  id String @id @default(cuid())

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  recipeId String
  recipes  Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
