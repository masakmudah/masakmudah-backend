generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @default(cuid())
  username     String         @unique
  fullname     String?
  email        String         @unique
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  password     Password?
  savedRecipes SavedRecipes[]
  Recipes      Recipes[]
}

model Password {
  id     String @id @default(cuid())
  hash   String
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model SavedRecipes {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  recipeId  String
  recipes   Recipes  @relation(fields: [recipeId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Recipes {
  id          String @id @default(cuid())
  recipe      String
  description String
  imageURL    String
  slug        String @unique @db.VarChar(255)

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  savedRecipes    SavedRecipes[]
  categoryRecipes CategoryRecipes[]
  ingredients     Ingredients[]
  instructions    Instructions[]
}

model Categories {
  id              String            @id @default(cuid())
  category        String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  categoryRecipes CategoryRecipes[]
}

model CategoryRecipes {
  id         String     @id @default(cuid())
  recipeId   String
  recipes    Recipes    @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  categoryId String
  categories Categories @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Ingredients {
  id         String   @id @default(cuid())
  recipeId   String
  recipes    Recipes  @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  ingredient String
  count      Int
  measure    String
  sequence   Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
}

model Instructions {
  id          String   @id @default(cuid())
  recipeId    String
  recipes     Recipes  @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  instruction String
  sequence    Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
}
