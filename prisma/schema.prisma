generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(cuid())
  username     String        @unique
  fullname     String?
  email        String        @unique
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  password     Password?
  savedRecipes SavedRecipe[]
  Recipes      Recipe[]
}

model Password {
  id     String @id @default(cuid())
  hash   String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique
}

model SavedRecipe {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  recipeId  String
  recipes   Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Recipe {
  id          String  @id @default(cuid())
  name        String
  description String
  duration    String?
  imageURL    String
  slug        String  @unique @db.VarChar(255)

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  savedRecipes SavedRecipe[]
  categories   CategoryRecipe[]
  ingredients  Ingredient[]
  instructions Instruction[]
}

model Category {
  id              String           @id @default(cuid())
  category        String
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  categoryRecipes CategoryRecipe[]
}

model CategoryRecipe {
  id         String   @id @default(cuid())
  recipeId   String
  recipes    Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  categoryId String
  categories Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Ingredient {
  id          String   @id @default(cuid())
  recipeId    String
  recipes     Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  name        String
  quantity    Int
  measurement String
  sequence    Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
}

model Instruction {
  id        String   @id @default(cuid())
  recipeId  String
  recipes   Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  text      String
  sequence  Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}
